<?php

namespace Proxies\__CG__\DvdWorld\WebsiteBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Movies extends \DvdWorld\WebsiteBundle\Entity\Movies implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'DvdWorld\\WebsiteBundle\\Entity\\Movies' . "\0" . 'title', '' . "\0" . 'DvdWorld\\WebsiteBundle\\Entity\\Movies' . "\0" . 'releaseYear', '' . "\0" . 'DvdWorld\\WebsiteBundle\\Entity\\Movies' . "\0" . 'length', '' . "\0" . 'DvdWorld\\WebsiteBundle\\Entity\\Movies' . "\0" . 'description', '' . "\0" . 'DvdWorld\\WebsiteBundle\\Entity\\Movies' . "\0" . 'price', '' . "\0" . 'DvdWorld\\WebsiteBundle\\Entity\\Movies' . "\0" . 'imgUrl', '' . "\0" . 'DvdWorld\\WebsiteBundle\\Entity\\Movies' . "\0" . 'vidUrl', '' . "\0" . 'DvdWorld\\WebsiteBundle\\Entity\\Movies' . "\0" . 'id', '' . "\0" . 'DvdWorld\\WebsiteBundle\\Entity\\Movies' . "\0" . 'genre', '' . "\0" . 'DvdWorld\\WebsiteBundle\\Entity\\Movies' . "\0" . 'fullname');
        }

        return array('__isInitialized__', '' . "\0" . 'DvdWorld\\WebsiteBundle\\Entity\\Movies' . "\0" . 'title', '' . "\0" . 'DvdWorld\\WebsiteBundle\\Entity\\Movies' . "\0" . 'releaseYear', '' . "\0" . 'DvdWorld\\WebsiteBundle\\Entity\\Movies' . "\0" . 'length', '' . "\0" . 'DvdWorld\\WebsiteBundle\\Entity\\Movies' . "\0" . 'description', '' . "\0" . 'DvdWorld\\WebsiteBundle\\Entity\\Movies' . "\0" . 'price', '' . "\0" . 'DvdWorld\\WebsiteBundle\\Entity\\Movies' . "\0" . 'imgUrl', '' . "\0" . 'DvdWorld\\WebsiteBundle\\Entity\\Movies' . "\0" . 'vidUrl', '' . "\0" . 'DvdWorld\\WebsiteBundle\\Entity\\Movies' . "\0" . 'id', '' . "\0" . 'DvdWorld\\WebsiteBundle\\Entity\\Movies' . "\0" . 'genre', '' . "\0" . 'DvdWorld\\WebsiteBundle\\Entity\\Movies' . "\0" . 'fullname');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Movies $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setReleaseYear($releaseYear)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReleaseYear', array($releaseYear));

        return parent::setReleaseYear($releaseYear);
    }

    /**
     * {@inheritDoc}
     */
    public function getReleaseYear()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReleaseYear', array());

        return parent::getReleaseYear();
    }

    /**
     * {@inheritDoc}
     */
    public function setLength($length)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLength', array($length));

        return parent::setLength($length);
    }

    /**
     * {@inheritDoc}
     */
    public function getLength()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLength', array());

        return parent::getLength();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', array($price));

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', array());

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setImgUrl($imgUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImgUrl', array($imgUrl));

        return parent::setImgUrl($imgUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getImgUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImgUrl', array());

        return parent::getImgUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setVidUrl($vidUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVidUrl', array($vidUrl));

        return parent::setVidUrl($vidUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getVidUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVidUrl', array());

        return parent::getVidUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function addGenre(\DvdWorld\WebsiteBundle\Entity\Genres $genre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGenre', array($genre));

        return parent::addGenre($genre);
    }

    /**
     * {@inheritDoc}
     */
    public function removeGenre(\DvdWorld\WebsiteBundle\Entity\Genres $genre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGenre', array($genre));

        return parent::removeGenre($genre);
    }

    /**
     * {@inheritDoc}
     */
    public function getGenre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGenre', array());

        return parent::getGenre();
    }

    /**
     * {@inheritDoc}
     */
    public function addFullname(\DvdWorld\WebsiteBundle\Entity\Actors $fullname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFullname', array($fullname));

        return parent::addFullname($fullname);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFullname(\DvdWorld\WebsiteBundle\Entity\Actors $fullname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFullname', array($fullname));

        return parent::removeFullname($fullname);
    }

    /**
     * {@inheritDoc}
     */
    public function getFullname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFullname', array());

        return parent::getFullname();
    }

}
